{"version":3,"file":"page-login.aa1faf.chunk.js","mappings":"4NAUO,SAASA,IACZ,MAAMC,GAAc,WACbC,EAAOC,IAAY,IAAAC,UAAiB,KACpCC,EAAUC,IAAe,IAAAF,UAAiB,IAC3CG,GAAY,QAAwE,KAEpFC,GAAW,IAAAC,cACZC,IACGA,EAAIC,iBAEJJ,EACKK,QAAQV,EAAOG,GACfQ,MAAMC,IACH,MAAM,KAACC,GAAQD,EAEfb,EAAYe,QAAQD,EAAK,IAE5BE,MAAM,KAAW,GAE1B,CAACf,EAAOG,EAAUE,EAAWN,IAGjC,OACI,kBAAMiB,OAAQ,WAAcV,SAAUA,EAAQ,WAC1C,yBAAMW,KAAKC,UAAUnB,EAAa,KAAM,MACxC,yBAAMkB,KAAKC,UAAUb,EAAW,KAAM,MAEtC,8BACI,kCACA,kBACIc,QAAUX,IACNP,EAASO,EAAIY,cAAcC,MAAM,EAErCC,YAAY,QACZC,KAAK,aAGb,8BACI,qCACA,kBACIJ,QAAUX,IACNJ,EAAYI,EAAIY,cAAcC,MAAM,EAExCC,YAAY,WACZC,KAAK,YAGZlB,EAAUmB,OAAQ,wCAAuB,OAC1C,mBACA,mBAAQD,KAAK,SAAQ,sBAGjC,C","sources":["webpack://typescript-project/./www/page/service/login/login.tsx"],"sourcesContent":["/* global HTMLFormElement, HTMLInputElement */\nimport {SyntheticEvent, useCallback, useState} from 'react';\n\nimport {useUserContext} from '../../../provider/user/user-context';\nimport {useMakeExecutableState} from '../../../util/function';\nimport {LoginResponseType} from '../../../service/auth/auth-type';\nimport {loginUser} from '../../../service/auth/auth-api';\nimport {throwError} from '../../../util/error';\nimport {apiUrl} from '../../../../server/const';\n\nexport function Login(): JSX.Element {\n    const userContext = useUserContext();\n    const [login, setLogin] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const loginHook = useMakeExecutableState<Parameters<typeof loginUser>, LoginResponseType>(loginUser);\n\n    const onSubmit = useCallback(\n        (evt: SyntheticEvent<HTMLFormElement>) => {\n            evt.preventDefault();\n\n            loginHook\n                .execute(login, password)\n                .then((loginResponse: LoginResponseType) => {\n                    const {user} = loginResponse;\n\n                    userContext.setUser(user);\n                })\n                .catch(throwError);\n        },\n        [login, password, loginHook, userContext]\n    );\n\n    return (\n        <form action={apiUrl.login} onSubmit={onSubmit}>\n            <pre>{JSON.stringify(userContext, null, 4)}</pre>\n            <pre>{JSON.stringify(loginHook, null, 4)}</pre>\n\n            <label>\n                <p>login</p>\n                <input\n                    onInput={(evt: SyntheticEvent<HTMLInputElement>) => {\n                        setLogin(evt.currentTarget.value);\n                    }}\n                    placeholder=\"login\"\n                    type=\"text\"\n                />\n            </label>\n            <label>\n                <p>password</p>\n                <input\n                    onInput={(evt: SyntheticEvent<HTMLInputElement>) => {\n                        setPassword(evt.currentTarget.value);\n                    }}\n                    placeholder=\"password\"\n                    type=\"text\"\n                />\n            </label>\n            {loginHook.error ? <h3>ERROR login</h3> : '???'}\n            <br />\n            <button type=\"submit\">submit</button>\n        </form>\n    );\n}\n"],"names":["Login","userContext","login","setLogin","useState","password","setPassword","loginHook","onSubmit","useCallback","evt","preventDefault","execute","then","loginResponse","user","setUser","catch","action","JSON","stringify","onInput","currentTarget","value","placeholder","type","error"],"sourceRoot":""}