{"version":3,"file":"page-cms-article-list.aa1faf.chunk.js","mappings":"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","sources":["webpack://typescript-project/./www/layout/box/box-helper.ts","webpack://typescript-project/./www/layout/box/box.tsx","webpack://typescript-project/./www/page/cms/cms-article-list/cms-article-list-type.ts","webpack://typescript-project/./www/page/cms/cms-article-list/cms-article-list-const.tsx","webpack://typescript-project/./www/page/cms/cms-article-list/cms-article-list.tsx","webpack://typescript-project/./www/page/cms/layout/cms-page/cms-page.tsx"],"sourcesContent":["// eslint-disable-next-line complexity\nexport function makeCssArray(value?: Array<number> | number): [number, number, number, number] {\n    if (typeof value === 'number') {\n        return [value, value, value, value];\n    }\n\n    if (!Array.isArray(value)) {\n        return [0, 0, 0, 0];\n    }\n\n    const arrayLength = value.length;\n\n    switch (arrayLength) {\n        case 0: {\n            return [0, 0, 0, 0];\n        }\n        case 1: {\n            return [value[0], value[0], value[0], value[0]];\n        }\n        case 2: {\n            return [value[0], value[1], value[0], value[1]];\n        }\n        case 3: {\n            return [value[0], value[1], value[2], value[1]];\n        }\n        case 4: {\n            return [value[0], value[1], value[2], value[3]];\n        }\n        default: {\n            console.error('makeCssArray: too big array');\n            return [value[0], value[1], value[2], value[3]];\n        }\n    }\n}\n","import {ReactNode, ElementType, CSSProperties} from 'react';\n\nimport {makeCssArray} from './box-helper';\n\ntype BoxPropsType = {\n    backgroundColor?: string;\n    boxSizing?: 'border-box' | 'content-box' | 'initial';\n    children?: ReactNode;\n    display?: 'block' | 'flex' | 'inline';\n    height?: number | string;\n    margin?: Array<number> | number;\n    padding?: Array<number> | number;\n    tagName?: ElementType;\n    width?: number | string;\n};\n\nexport function Box(props: BoxPropsType): JSX.Element {\n    const {\n        tagName: TagName = 'div',\n        children,\n        margin,\n        padding,\n        width,\n        height,\n        boxSizing,\n        backgroundColor,\n        display,\n    } = props;\n\n    const [marginTop, marginRight, marginBottom, marginLeft, paddingTop, paddingRight, paddingBottom, paddingLeft] = [\n        ...makeCssArray(margin),\n        ...makeCssArray(padding),\n    ].map((value: number): string => `${value}px`);\n\n    const style: CSSProperties = {\n        backgroundColor,\n        boxSizing,\n        display,\n        height,\n        marginBottom,\n        marginLeft,\n        marginRight,\n        marginTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight,\n        paddingTop,\n        width,\n    };\n\n    return <TagName style={style}>{children}</TagName>;\n}\n","import {ArticleType} from '../../../../server/article/article-type';\n\nexport const enum SortDirectionEnum {\n    ascend = 'ascend',\n    descend = 'descend',\n}\n\nexport type ArticleForTableListKeysType =\n    | 'articleType'\n    | 'createdDate'\n    | 'id'\n    | 'isActive'\n    | 'publishDate'\n    | 'slug'\n    | 'title'\n    | 'titleImage'\n    | 'updatedDate';\nexport type ArticleForTableListType = Pick<ArticleType, ArticleForTableListKeysType>;\nexport type KeyForTableListListType = [\n    'articleType',\n    'createdDate',\n    'id',\n    'isActive',\n    'publishDate',\n    'slug',\n    'title',\n    'titleImage',\n    'updatedDate'\n];\n","/* global HTMLInputElement */\nimport {SyntheticEvent} from 'react';\nimport {Input} from 'antd';\nimport {ColumnType} from 'antd/lib/table/interface';\nimport {SearchOutlined} from '@ant-design/icons';\nimport {Link} from 'react-router-dom';\n\nimport {getPathToImage, getArticleLinkToEdit} from '../cms-article/cms-article-helper';\nimport {getTickCross} from '../../../util/string';\nimport {dateIsoToHumanView} from '../../../util/time';\nimport {getArticleLinkToViewClient} from '../../../client-component/article/article-helper';\n\nimport {\n    ArticleForTableListKeysType,\n    ArticleForTableListType,\n    KeyForTableListListType,\n    SortDirectionEnum,\n} from './cms-article-list-type';\n\ntype GetArticleTableColumnListArgumentType = {\n    setSearchText: (searchText: string) => void;\n    setSearchedColumn: (dataIndex: ArticleForTableListKeysType) => void;\n};\n\nexport function getArticleTableColumnList(\n    data: GetArticleTableColumnListArgumentType\n): Array<ColumnType<ArticleForTableListType>> {\n    const {setSearchedColumn, setSearchText} = data;\n\n    const articleTableColumnList: Array<ColumnType<ArticleForTableListType>> = [\n        /*\n        {\n            dataIndex: 'id',\n            defaultSortOrder: null,\n            key: 'id',\n            sorter: () => 0,\n            title: 'Id',\n        },\n    */\n        {\n            dataIndex: 'title',\n            defaultSortOrder: SortDirectionEnum.ascend,\n            // eslint-disable-next-line react/no-multi-comp\n            filterDropdown: () => {\n                return (\n                    <Input\n                        key=\"title\"\n                        onInput={(evt: SyntheticEvent<HTMLInputElement>) => {\n                            setSearchedColumn('title');\n                            setSearchText(evt.currentTarget.value.trim());\n                        }}\n                        placeholder=\"Search...\"\n                    />\n                );\n            },\n            filterIcon: <SearchOutlined />,\n            key: 'title',\n            render(title: string, article: ArticleForTableListType) {\n                return (\n                    <Link key={article.id} to={getArticleLinkToViewClient(article.slug)}>\n                        {title}\n                    </Link>\n                );\n            },\n            sorter: () => 0,\n            title: 'Title',\n        },\n        {\n            dataIndex: 'slug',\n            defaultSortOrder: null,\n            // eslint-disable-next-line react/no-multi-comp\n            filterDropdown: () => {\n                return (\n                    <Input\n                        key=\"slug\"\n                        onInput={(evt: SyntheticEvent<HTMLInputElement>) => {\n                            setSearchedColumn('slug');\n                            setSearchText(evt.currentTarget.value);\n                        }}\n                        placeholder=\"Search...\"\n                    />\n                );\n            },\n            filterIcon: <SearchOutlined />,\n            key: 'slug',\n            render(slug: string, article: ArticleForTableListType) {\n                return (\n                    <Link key={article.id} to={getArticleLinkToEdit(article.id)}>\n                        {slug}\n                    </Link>\n                );\n            },\n            sorter: () => 0,\n            title: 'Slug/edit',\n        },\n        {\n            dataIndex: 'articleType',\n            defaultSortOrder: null,\n            key: 'articleType',\n            sorter: () => 0,\n            title: 'Type',\n        },\n        {\n            align: 'center',\n            dataIndex: 'isActive',\n            defaultSortOrder: null,\n            key: 'isActive',\n            render(\n                isActive: boolean\n                // article: ArticleForTableListType\n            ) {\n                return getTickCross(isActive);\n            },\n            sorter: () => 0,\n            title: 'Is active',\n        },\n        {\n            align: 'center',\n            dataIndex: 'titleImage',\n            defaultSortOrder: null,\n            key: 'titleImage',\n            render(\n                imageName: string\n                // article: ArticleForTableListType\n            ) {\n                return (\n                    <img\n                        alt={imageName}\n                        height=\"64px\"\n                        src={getPathToImage(imageName, {height: 64, width: 64})}\n                        style={{objectFit: 'contain'}}\n                        width=\"64px\"\n                    />\n                );\n            },\n            sorter: () => 0,\n            title: 'Image',\n        },\n        {\n            align: 'right',\n            dataIndex: 'createdDate',\n            defaultSortOrder: null,\n            key: 'createdDate',\n            render: dateIsoToHumanView,\n            sorter: () => 0,\n            title: 'Created UTC',\n            width: 120,\n        },\n        {\n            align: 'right',\n            dataIndex: 'updatedDate',\n            defaultSortOrder: null,\n            key: 'updatedDate',\n            render: dateIsoToHumanView,\n            sorter: () => 0,\n            title: 'Updated UTC',\n            width: 120,\n        },\n        {\n            align: 'right',\n            dataIndex: 'publishDate',\n            defaultSortOrder: null,\n            key: 'publishDate',\n            render: dateIsoToHumanView,\n            sorter: () => 0,\n            title: 'Publish UTC',\n            width: 120,\n        },\n    ];\n\n    return articleTableColumnList;\n}\n\nexport const keyForTableListList: KeyForTableListListType = [\n    'articleType',\n    'createdDate',\n    'id',\n    'isActive',\n    'publishDate',\n    'slug',\n    'title',\n    'titleImage',\n    'updatedDate',\n];\n","import 'antd/dist/antd.css';\n\nimport {useEffect, useState} from 'react';\nimport {Table, Typography} from 'antd';\nimport {TablePaginationConfig, FilterValue, SorterResult, TableCurrentDataSource} from 'antd/lib/table/interface';\n\nimport {useMakeExecutableState} from '../../../util/function';\nimport {PaginationQueryType, PaginationResultType} from '../../../../server/data-base/data-base-type';\nimport {getArticleListPaginationPick} from '../../../service/article/article-api';\nimport {CmsPage} from '../layout/cms-page/cms-page';\n\nimport {getArticleTableColumnList, keyForTableListList} from './cms-article-list-const';\nimport {ArticleForTableListKeysType, ArticleForTableListType, SortDirectionEnum} from './cms-article-list-type';\n\nconst {Title} = Typography;\n\nexport function CmsArticleList(): JSX.Element {\n    const defaultPageSize = 10;\n    const [searchedColumn, setSearchedColumn] = useState<ArticleForTableListKeysType>('title');\n    const [searchText, setSearchText] = useState<string>('');\n\n    // article for table\n    const {\n        execute: executeArticleList,\n        result: resultArticleList,\n        isInProgress: isInProgressArticleList,\n    } = useMakeExecutableState<\n        Parameters<typeof getArticleListPaginationPick<keyof ArticleForTableListType>>,\n        PaginationResultType<ArticleForTableListType>\n    >(getArticleListPaginationPick);\n\n    const [paginationArticleList, setPaginationArticleList] = useState<PaginationQueryType<ArticleForTableListType>>({\n        pageIndex: 0,\n        pageSize: defaultPageSize,\n        query: {},\n        sort: {title: 1},\n    });\n\n    useEffect(() => {\n        executeArticleList(paginationArticleList, keyForTableListList);\n    }, [executeArticleList, paginationArticleList]);\n\n    // eslint-disable-next-line complexity, max-statements\n    function handleTableChange(\n        pagination: TablePaginationConfig,\n        filters: Record<string, FilterValue | null>,\n        sorter: Array<SorterResult<ArticleForTableListType>> | SorterResult<ArticleForTableListType>,\n        extra: TableCurrentDataSource<ArticleForTableListType>\n    ) {\n        const firstSorter: SorterResult<ArticleForTableListType> | void = Array.isArray(sorter) ? sorter[0] : sorter;\n\n        if (!firstSorter) {\n            console.warn('handleTableChange - NO firstSorter');\n            return;\n        }\n\n        const {column, order, field, columnKey} = firstSorter;\n        const sortDirection = order === SortDirectionEnum.descend ? -1 : 1;\n\n        const pageIndex = (pagination.current || 1) - 1;\n        const pageSize = pagination.pageSize || defaultPageSize;\n\n        setPaginationArticleList((): PaginationQueryType<ArticleForTableListType> => {\n            return {\n                pageIndex,\n                pageSize,\n                query: {[searchedColumn]: {$regex: searchText, $regexFlag: 'i'}},\n                sort: {[String(field)]: sortDirection},\n            };\n        });\n\n        console.log('handleTableChange');\n        console.log('pagination:', pagination);\n        console.log('filters:', filters);\n        console.log('column:', column);\n        console.log('sorter:', sorter);\n        console.log('order:', order);\n        console.log('columnKey:', columnKey);\n        console.log('extra:', extra);\n        console.log('///');\n        console.log(searchedColumn);\n        console.log(searchText);\n        console.log('///');\n    }\n\n    return (\n        <CmsPage>\n            <Title level={2}>Article list</Title>\n\n            <Table<ArticleForTableListType>\n                columns={getArticleTableColumnList({setSearchText, setSearchedColumn})}\n                dataSource={resultArticleList?.result || []}\n                loading={isInProgressArticleList}\n                onChange={handleTableChange}\n                pagination={{\n                    current: paginationArticleList.pageIndex + 1,\n                    defaultPageSize,\n                    hideOnSinglePage: false,\n                    pageSize: paginationArticleList.pageSize,\n                    pageSizeOptions: [defaultPageSize, 50, 100, 500, 1000, 2000, 5000],\n                    showSizeChanger: true,\n                    total: resultArticleList?.count || 0,\n                }}\n                rowKey=\"id\"\n            />\n        </CmsPage>\n    );\n}\n","import {ReactNode} from 'react';\nimport {Layout, Menu} from 'antd';\nimport {Link, useLocation} from 'react-router-dom';\n\nimport {Box} from '../../../../layout/box/box';\nimport {appRoute} from '../../../../component/app/app-route';\n\nconst {Content} = Layout;\n\ntype CmsPagePropsType = {\n    children: ReactNode;\n};\n\nexport function CmsPage(props: CmsPagePropsType): JSX.Element {\n    const {children} = props;\n    const routerLocation = useLocation();\n\n    return (\n        <Layout>\n            <Box padding={16}>\n                <Menu\n                    defaultSelectedKeys={[routerLocation.pathname]}\n                    items={[\n                        {\n                            key: appRoute.articleList.path,\n                            label: <Link to={appRoute.articleList.path}>List</Link>,\n                        },\n                        {\n                            key: appRoute.articleCreate.path,\n                            label: <Link to={appRoute.articleCreate.path}>Create</Link>,\n                        },\n                        {\n                            key: appRoute.articleTree.path,\n                            label: <Link to={appRoute.articleTree.path}>Tree</Link>,\n                        },\n                    ]}\n                    mode=\"horizontal\"\n                />\n            </Box>\n\n            <Box padding={16}>\n                <Content>{children}</Content>\n            </Box>\n\n            {/* <Footer>Footer is here</Footer> */}\n        </Layout>\n    );\n}\n"],"names":["makeCssArray","value","Array","isArray","length","console","error","Box","props","tagName","TagName","children","margin","padding","width","height","boxSizing","backgroundColor","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","map","style","SortDirectionEnum","getArticleTableColumnList","data","setSearchedColumn","setSearchText","dataIndex","defaultSortOrder","ascend","filterDropdown","onInput","evt","currentTarget","trim","placeholder","filterIcon","SearchOutlined","key","render","title","article","Link","to","slug","id","sorter","align","isActive","imageName","alt","src","objectFit","keyForTableListList","Title","CmsArticleList","searchedColumn","useState","searchText","execute","executeArticleList","result","resultArticleList","isInProgress","isInProgressArticleList","paginationArticleList","setPaginationArticleList","pageIndex","pageSize","query","sort","useEffect","level","columns","dataSource","loading","onChange","pagination","filters","extra","firstSorter","warn","column","order","field","columnKey","sortDirection","descend","current","$regex","$regexFlag","String","defaultPageSize","hideOnSinglePage","pageSizeOptions","showSizeChanger","total","count","rowKey","Content","CmsPage","routerLocation","defaultSelectedKeys","pathname","items","label","mode"],"sourceRoot":""}